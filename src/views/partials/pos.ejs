<div class="container-fluid h-100 gap-2 mt-3 mb-3">
    <div class="row justify-content-between h-100 ">
        <div class="col-md-8 col-xxl-9">
            <div class="card h-100 ">
                <div class="card-header">
                    <div class="container-fluid m-0 p-0">
                        <div class="row justify-content-between">
                            <div class="col-2">
                                <span class="fw-semibold fs-5 ">POS</span>
                            </div>
                            <div class="col-5">
                                <form action="#" class="d-none d-sm-inline-block w-100 ">
                                    <div class="input-group input-group-sm">
                                        <input type="text" class="form-control" placeholder="Product name"
                                            arial-label="" aria-describedby="button-search" />
                                        <button class="btn btn-primary" type="button" id="button-search">
                                            Search
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-body">
                    <div class="container-fluid m-0 p-0 h-100 d-flex flex-column ">
                        <div class="row flex-grow-0">
                            <div class="container-fluid d-flex justify-content-between gap-2">

                                <% categories.forEach(category=> { %>
                                    <div class="card w-100 text-center mt-1 mb-1 card-hovered p-0">
                                        <div class="card-body p-1 m-0">
                                            <span class="fw-bold" style="font-size: 12px;"><i class="bi bi-tag"></i>
                                                <%= category.name %>
                                            </span>
                                            <span class="badge bg-primary " style="font-size: 10px;">
                                                <%- 20 %>
                                            </span>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                        </div>
                        <div class="row flex-grow-1">
                            <div
                                class="container-fluid m-0 h-100 d-flex justify-content-start align-content-start flex-wrap overflow-y-scroll gap-2 mt-2 pt-2">
                                <% products.forEach(product=> { %>
                                    <div class=" card card-hovered" style="height: auto; width: 150px;">

                                        <img src="#" class="card-img-top bg-body-secondary" alt="image"
                                            style="width: auto; height: 150px;">
                                        <span class="badge notify-badge">
                                            <strong style="font-size: 12px;"><%- product.quantity %> </strong>/ <%-
                                                product.discount * 100 %>%
                                        </span>
                                        <span class="badge price-badge">
                                            <%- product.price %> USD
                                        </span>
                                        </img>
                                        <div class="card-body p-1">
                                            <div class="span" style="font-size: 12px;">
                                                <%- product.name %>
                                            </div>
                                        </div>
                                        <div class="card-footer d-flex justify-content-between p-1">
                                            <a href="#" class="btn btn-primary btn-sm">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="#" class="btn btn-success btn-sm" id="<%- product._id %>">
                                                <i class="bi bi-plus"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <% }); %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-xxl-3">
            <div class="card h-100">
                <div class="card-header">
                    <div class="container-fluid m-0 p-0">
                        <div class="row justify-content-between">
                            <div class="col-5">
                                <span class="fw-semibold fs-5 ">Cart</span>
                            </div>
                            <div class="col-5 d-flex justify-content-end gap-2">
                                <a href="#" class="btn btn-primary btn-sm" data-bs-toggle="modal"
                                    data-bs-target="#userModalSelection">Customer</a>
                                <a href="#" class="btn btn-danger btn-sm" id="btnClearCart">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0">
                    <div class="container-fluid m-0 p-0 h-100 d-flex flex-column ">
                        <div class="row flex-grow-0">
                            <div class="col-auto">
                                <span>Customer: <span id="lblCustomer"></span></span>
                            </div>
                            <div class="col-auto">
                                <span>Tax Number: <span id="lblTaxNumber"></span></span>
                            </div>
                        </div>
                        <div class="row flex-grow-1 ">
                            <div class="col-12 ">
                                <table class="table table-sm text-center" style="font-size: 12px;"
                                    id="listProductTable">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Item</th>
                                            <th scope="col">Quantity</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- List of products defined dynamically -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="row flex-grow-0">
                            <div class="container-fluid h-100 d-flex flex-column ">
                                <div class="row flex-grow-1 ">
                                    <div class="col">Subtotal</div>
                                    <div class="col text-end "><span id="subtotal">0.00 USD</span></div>
                                </div>
                                <div class="row flex-grow-1 ">
                                    <div class="col">Tax</div>
                                    <div class="col text-end "><span id="tax">0.00 USD</span></div>
                                </div>
                                <div class="row flex-grow-1 ">
                                    <div class="col">Discount</div>
                                    <div class="col text-end "><span id="discount">0.00 USD</span></div>
                                </div>
                                <div class="row flex-grow-1 ">
                                    <div class="col">Total</div>
                                    <div class="col text-end "> <span class="text-success-emphasis fw-semibold"
                                            id="total" style="font-size: 20px;">0.00 USD</span>
                                    </div>
                                </div>
                                <div class=" row flex-grow-1 ">
                                    <div class=" col">Payment mode </div>
                                    <div class="col text-end"> <span class="text-danger fw-semibold"
                                            id="paymentMode">Cash</span>
                                    </div>
                                </div>
                                <div class=" row flex-grow-1 mt-2">
                                    <div class=" col-12 d-grid">
                                        <a href="#" class="btn btn-primary btn-sm" id="btnPayAndSaveSale">Pay</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- // User modal dialog -->
    <div class="modal fade modal-lg" id="userModalSelection" tabindex="-1" aria-labelledby="userModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Customer</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-sm text-center" style="font-size: 14px;" id="customerTable"">
                        <thead>
                            <tr>
                                <th scope=" col">#</th>
                            <th scope="col">Customer</th>
                            <th scope="col">Tax Number</th>
                            <th scope="col">Email</th>
                            <th scope="col">Phone</th>
                            <th scope="col">Action</th>
                            </tr>
                        </thead>

                        <tbody>
                            <% customers.forEach((customer, i)=> {%>
                                <tr>
                                    <td scope="row"><%- i+1 %></td>
                                    <td><span><%- customer.first_name %> <%- customer.last_name %></span></td>
                                    <td><span><%- customer.tax_number %></span></td>
                                    <td><span><%- customer.email %></span></td>
                                    <td><span><%- customer.phone %></span></td>
                                    <td><a href="#" class="btn btn-primary btn-sm" id="select_<%-customer._id %>"
                                            data-bs-dismiss="modal"><i class="bi bi-person-plus-fill"></i></a></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- // Payment modal dialog -->
    <div class="modal fade modal-lg" id="payModal" tabindex="-1" aria-labelledby="payModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Payment</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-4">
                            <div class="input-group input-group-sm mb-3">
                                <span class="input-group-text" id="inputGroup-sizing-sm">Total</span>
                                <input type="number" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" id="payTotal" readonly>
                                <span class="input-group-text">USD</span>
                              </div>
                        </div>
                        <div class="col-4">
                            <div class="input-group input-group-sm mb-3">
                                <span class="input-group-text" id="inputGroup-sizing-sm">Payment</span>
                                <input type="number" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" id="payPayment">
                                <span class="input-group-text">USD</span>
                              </div>
                        </div>
                        <div class="col-4">
                            <div class="input-group input-group-sm mb-3">
                                <span class="input-group-text" id="inputGroup-sizing-sm">Change</span>
                                <input type="number" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" id="payChange" readonly>
                                <span class="input-group-text">USD</span>
                              </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-sm">Submit</button>
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Message Modal -->
    <div class="modal fade modal-sm" id="msgModal" tabindex="-1" aria-labelledby="msgModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="msgModalTitle">Title</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="msgBodyModal">
                    <!-- Payment modal body -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-sm" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script type="importmap">
        {
          "imports": {
            "@popperjs/core": "https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/esm/popper.min.js",
            "bootstrap": "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.esm.min.js"
          }
        }
    </script>

    <script type="module">
        import * as boostrap from "bootstrap";

        class PosController {

            // Data from server
            productList = <%- JSON.stringify(products) %>;
            customerList = <%- JSON.stringify(customers) %>;

            posCartOrders = [];
            customerSelected = undefined;

            // Buttons product list
            btnsAddProduct = document.querySelectorAll("a.btn.btn-success.btn-sm");

            // Buttons customer list
            btnsAddCustomer = document.querySelectorAll("a[id^='select_']");

            // Cart product list
            orderListTable = document.querySelector('#listProductTable');

            // Cart fields
            subtotal_field = document.querySelector('#subtotal');
            tax_field = document.querySelector('#tax');
            discount_field = document.querySelector('#discount');
            total_field = document.querySelector('#total');

            // Customer fields
            lblCustomer = document.querySelector("#lblCustomer");
            lblTaxNumber = document.querySelector("#lblTaxNumber");

            // Message modal
            msgModal = document.querySelector("#msgModal");

            // Payment Modal
            payModal = document.querySelector("#payModal");
            payAmountInput = document.querySelector("#payPayment");

            // Payment button
            btnPayAndSaveSale = document.querySelector("#btnPayAndSaveSale");

            // Clear cart button
            btnClearCart = document.getElementById("btnClearCart");

            // Methods
            updateOrderList = function() {
                
                const tableBody = this.orderListTable.getElementsByTagName('tbody')[0];
                tableBody.innerHTML = "";

                this.posCartOrders.forEach((order, i) => {
                    const tr = document.createElement("tr");
                    const th_1 = document.createElement("th");
                    const td_2 = document.createElement("td");
                    const td_3 = document.createElement("td");
                    const td_4 = document.createElement("td");
                    const td_5 = document.createElement("td");

                    const a_td_5 = document.createElement("a");
                    const input_td_3 = document.createElement("input");

                    th_1.innerText = i;
                    th_1.scope = "row";
                    td_2.innerText = order.product.name;

                    // Input field
                    input_td_3.className = "form-control form-control-sm";
                    input_td_3.type = "number";
                    input_td_3.min = "1";
                    input_td_3.value = `${order.quantity}`;
                    input_td_3.style = "width: 80px;";

                    td_4.innerText = order.product.price;
                    // Delete button
                    a_td_5.className = "btn btn-danger btn-sm";
                    a_td_5.id = `delete_${order.product._id}`;
                    a_td_5.innerHTML = '<i class="bi bi-trash"></i></a>'

                    // Eventlistener for delete button
                    a_td_5.addEventListener('click', () => {
                        let deletedOrder = this.posCartOrders.find(order2 => order2.product._id == order.product._id);
                        if (deletedOrder) {
                            // console.log(deletedOrder);
                            const iProduct = this.posCartOrders.indexOf(deletedOrder);
                            this.posCartOrders.splice(iProduct, 1);
                            this.updateOrderList();
                            this.updateFields();
                        }
                    });

                    // Eventlistener for input number control
                    input_td_3.addEventListener('input', (e) => {
                        let changedOrder = this.posCartOrders.find(order2 => order2.product._id == order.product._id);
                        changedOrder.quantity = e.target.value;
                        changedOrder.subtotal = changedOrder.quantity * changedOrder.product.price;
                        changedOrder.discount = changedOrder.quantity * changedOrder.product.discount * changedOrder.product.price;
                        this.updateFields();
                    });

                    td_3.append(input_td_3);
                    td_5.appendChild(a_td_5);

                    tr.appendChild(th_1);
                    tr.appendChild(td_2);
                    tr.appendChild(td_3);
                    tr.appendChild(td_4);
                    tr.appendChild(td_5);

                    tableBody.append(tr);
                });
            }

            initCustomerLabel = function () {
                if (!this.customerSelected) {
                    this.lblCustomer.innerText = "Unknown";
                    this.lblTaxNumber.innerText = "No defined";
                };
            }

            updateFields = function () {

                let subtotal = 0;
                let discount = 0;
                let tax = 0;

                this.posCartOrders.forEach(order => {
                    subtotal += order.subtotal;
                    discount += order.discount;
                    tax += order.product.tax * order.subtotal;
                });

                this.subtotal_field.innerText = `${subtotal.toFixed(2)} USD`;
                this.tax_field.innerText = `${tax.toFixed(2)} USD`;
                this.discount_field.innerText = `${discount.toFixed(2)} USD`;
                this.total_field.innerText = `${(subtotal + tax - discount).toFixed(2)} USD`;
            }

            updateCustomerLabel = function (customer) {
                if (customer) {
                    this.lblCustomer.innerText = `${customer.first_name} ${customer.last_name}`;
                    this.lblTaxNumber.innerText = `${customer.tax_number}`;
                };
            }

            getSaleData = function () {
                return {
                    customer: this.customerSelected._id,
                    products: this.posCartOrders.map(orders => { return { _id: orders.product._id, quantity: orders.quantity } }),
                    subTotal: Number(document.querySelector("#subtotal").innerText.split(" ")[0]),
                    totalAmount: Number(document.querySelector("#total").innerText.split(" ")[0]),
                    taxAmount: Number(document.querySelector("#tax").innerText.split(" ")[0]),
                    discountAmount: Number(document.querySelector("#discount").innerText.split(" ")[0]),
                    paymentMode: document.querySelector("#paymentMode").innerText,
                };
            }

            showMessageModal = function (msgs, title){
                const msgBModal = new boostrap.Modal(this.msgModal);
                const bodyModal = this.msgModal.querySelector("#msgBodyModal");
                const titleModal = this.msgModal.querySelector("#msgModalTitle")

                let iHtml = "<ol>";
                msgs.forEach(msg => {
                    iHtml += `<li>${msg}</li>`;
                });
                iHtml += "</ol>";

                bodyModal.innerHTML = iHtml;
                titleModal.innerHTML = title;
                msgBModal.show();
            }

            showPaymentModal = function (data){
                const payBModal = new boostrap.Modal(this.payModal);
                const payTotal = document.querySelector("#payTotal");
                const payPayment = document.querySelector("#payPayment");
                const payChange = document.querySelector("#payChange");

                payTotal.value = data.totalAmount;

                payBModal.show();
            }

            addProductToChart = function() {

                this.btnsAddProduct.forEach(btn => {
                    btn.addEventListener('click', () => {
                        let addedProduct = this.productList.find(product => product._id == btn.id);
                        if (this.posCartOrders.find(order => order.product == addedProduct)) {
                            const editedOrder = this.posCartOrders.find(order => order.product._id == addedProduct._id);

                            editedOrder.quantity += 1;
                            editedOrder.subtotal = editedOrder.quantity * editedOrder.product.price;
                            editedOrder.discount = editedOrder.quantity * editedOrder.product.discount * editedOrder.product.price;

                        } else {
                            this.posCartOrders.push({
                                product: addedProduct,
                                quantity: 1,
                                subtotal: addedProduct.price,
                                discount: addedProduct.discount * addedProduct.price
                            });
                        }
                        // console.log(posProductOrders);
                        this.updateOrderList();
                        this.updateFields();
                    });
                });
            }

            clearCartList = function() {
                // Clear porducts cart and customer
                this.btnClearCart.addEventListener('click', () => {
                    this.posCartOrders.length = 0;
                    this.customerSelected = undefined;
                    this.updateOrderList();
                    this.updateFields();
                    this.initCustomerLabel();
                });
            }

            addCustomer = function() {
                this.btnsAddCustomer.forEach(btn => {
                    btn.addEventListener('click', () => {
                        let addedCustomer = this.customerList.find(customer => customer._id == btn.id.split("_")[1])
                        if (!this.customerSelected) {
                            this.customerSelected = addedCustomer;
                            this.updateCustomerLabel(addedCustomer);
                        }
                    });
                });
            }
            
             // Clear msgModal
            clearMsgModal = function() {
                this.msgModal.addEventListener("hidden.bs.modal", (e) => {
                    const bodyModal = document.querySelector("#msgBodyModal");
                    bodyModal.innerHTML = "";
                });
            }
            
            processingPayment = function() {
                // Payment button eventlistener
                this.btnPayAndSaveSale.addEventListener('click', () => {

                    let errors = [];
                    
                    // 1. Check if a customer is selected or 
                    // any product is added into de cart
                    if(!this.customerSelected) {
                        errors.push("Customer not selected!!");
                    };

                    if(this.posCartOrders.length == 0) {
                        errors.push("No product added to cart!!");
                    };
                    if(errors.length != 0) {
                        this.showMessageModal(errors, "<span class='text-warning'><i class='bi bi-exclamation-octagon'></i> Warning</span>");
                    } else {
                        // 2. Show payment modal 
                        let data = this.getSaleData();
                        this.showPaymentModal(data);
                        
                        // 3. Get sale data
                        // let data = getSaleData();
                        
                        // 4. Post sale data
                        // postData("/sale/create-pos", { data });

                        // 5. Update pos window
                        // window.location.reload(true);
                    }
                });
            }

            updatingPaymentModal = function() {
                    // PayAmount modified
                this.payAmountInput.addEventListener("input", (e) => {
                    const payTotal = document.querySelector("#payTotal");
                    const payChange = document.querySelector("#payChange");

                    payChange.value = (e.target.value - payTotal.value).toFixed(2);
                });
            }

            start = function(){

                // 1. Init customer labels
                this.initCustomerLabel();

                // 2. Register add product event listener
                this.addProductToChart();

                // 3. Register clear cart event listener
                this.clearCartList();

                // 4. Register add customer event listener
                this.addCustomer();

                // 5. Register msgModal event listener
                this.clearMsgModal();

                // 6. Register payment processing event listener
                this.processingPayment();

                // 7. Register updating payment modal event listener
                this.updatingPaymentModal();
            }

        }

        (()=>{
            const posController = new PosController();
            posController.start();
        })();

    </script>