<div class="container-fluid h-100 gap-2 mt-3 mb-3">
    <div class="row justify-content-between h-100 ">
        <div class="col-md-8 col-xxl-9">
            <div class="card h-100 ">
                <div class="card-header">
                    <div class="container-fluid m-0 p-0">
                        <div class="row justify-content-between">
                            <div class="col-2">
                                <span class="fw-semibold fs-5 ">POS</span>
                            </div>
                            <div class="col-5">
                                <form action="#" class="d-none d-sm-inline-block w-100 ">
                                    <div class="input-group input-group-sm">
                                        <input type="text" class="form-control" placeholder="Product name"
                                            arial-label="" aria-describedby="button-search" />
                                        <button class="btn btn-primary" type="button" id="button-search">
                                            Search
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-body">
                    <div class="container-fluid m-0 p-0 h-100 d-flex flex-column ">
                        <div class="row flex-grow-0">
                            <div class="container-fluid d-flex justify-content-between gap-2">

                                <% categories.forEach(category => { %>
                                    <div class="card w-100 text-center mt-1 mb-1 card-hovered p-0">
                                        <div class="card-body p-1 m-0">
                                            <span class="fw-bold" style="font-size: 12px;"><i class="bi bi-tag"></i>  <%= category.name %>
                                            </span>
                                            <span class="badge bg-primary " style="font-size: 10px;">
                                                <%- 20 %>
                                            </span>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                        <div class="row flex-grow-1">
                            <div
                                class="container-fluid m-0 h-100 d-flex justify-content-start align-content-start flex-wrap overflow-y-scroll gap-2 mt-2 pt-2">
                                <% products.forEach(product => { %>
                                    <div class=" card card-hovered" style="height: auto; width: 150px;">
                                        
                                        <img src="#" class="card-img-top bg-body-secondary" alt="image"
                                        style="width: auto; height: 150px;">
                                        <span class="badge notify-badge">
                                            -<%- product.discount * 100 %>%
                                        </span>
                                        <span class="badge price-badge">
                                            <%- product.price %> USD
                                        </span>
                                        </img>  
                                        <div class="card-body p-1">
                                            <div class="span" style="font-size: 12px;">
                                                <%- product.name %>
                                            </div>
                                        </div>
                                        <div class="card-footer d-flex justify-content-between p-1">
                                            <a href="#" class="btn btn-primary btn-sm">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a href="#" class="btn btn-success btn-sm" id="<%- product._id %>">
                                                <i class="bi bi-plus"></i>
                                            </a>
                                        </div>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 col-xxl-3">
            <div class="card h-100">
                <div class="card-header">
                    <div class="container-fluid m-0 p-0">
                        <div class="row justify-content-between">
                            <div class="col-5">
                                <span class="fw-semibold fs-5 ">Cart</span>
                            </div>
                            <div class="col-5 d-flex justify-content-end gap-2">
                                <a href="#" class="btn btn-primary btn-sm">Customer</a>
                                <a href="#" class="btn btn-danger btn-sm" id="btnClearCart">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="container-fluid m-0 p-0 h-100 d-flex flex-column ">
                        <div class="row flex-grow-1 ">
                            <div class="col-12 ">
                                <table class="table table-sm text-center" style="font-size: 12px;" id="listProductTable"">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Item</th>
                                            <th scope="col">Quantity</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">Delete</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    <!-- List of products defined dynamically -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="row flex-grow-0">
                            <div class="container-fluid h-100 d-flex flex-column ">
                                <div class="row flex-grow-1 ">
                                    <div class="col">Subtotal</div>
                                    <div class="col text-end "><span id="subtotal">0.00 USD</span></div>
                                </div>
                                <div class="row flex-grow-1 ">
                                    <div class="col">Tax</div>
                                    <div class="col text-end "><span id="tax">0.00 USD</span></div>
                                </div>
                                <div class="row flex-grow-1 ">
                                    <div class="col">Discount</div>
                                    <div class="col text-end "><span id="discount">0.00 USD</span></div>
                                </div>
                                <div class="row flex-grow-1 ">
                                    <div class="col">Total</div>
                                    <div class="col text-end "> <span class="text-success-emphasis fw-semibold" id="total" style="font-size: 20px;">0.00 USD</span>
                                    </div>
                                </div>
                                <div class=" row flex-grow-1 ">
                                    <div class=" col">Payment mode </div>
                                    <div class="col text-end"> <span class="text-danger fw-semibold">Cash</span>
                                    </div>
                                </div>
                                <div class=" row flex-grow-1 mt-2">
                                    <div class=" col-12 d-grid">
                                        <a href="#" class="btn btn-primary  btn-">Pay</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // POS > Chart update function
    let posCartOrders = [];

    function updateOrderList() {

        const tableBody = listProductTable.getElementsByTagName('tbody')[0];
        tableBody.innerHTML = "";
        
        posCartOrders.forEach((order, i) => {                
            const tr = document.createElement("tr");
            const th_1 = document.createElement("th");
            const td_2 = document.createElement("td");
            const td_3 = document.createElement("td");
            const td_4 = document.createElement("td");
            const td_5 = document.createElement("td");

            const a_td_5 = document.createElement("a");
            const input_td_3 = document.createElement("input");

            
            th_1.innerText = i;
            th_1.scope = "row";
            td_2.innerText = order.product.name;
            
            // Input field
            input_td_3.className = "form-control form-control-sm";
            input_td_3.type = "number";
            input_td_3.min = "1";
            input_td_3.value = `${order.quantity}`;
            input_td_3.style = "width: 80px;";
            
            td_4.innerText = order.product.price;
            // Delete button
            a_td_5.className = "btn btn-danger btn-sm";
            a_td_5.id =`delete_${order.product._id}`;
            a_td_5.innerHTML =  '<i class="bi bi-trash"></i></a>'

            // Eventlistener for delete button
            a_td_5.addEventListener('click', (e) => {
                let deletedOrder = posCartOrders.find(order2 => order2.product._id == order.product._id);
                if(deletedOrder){
                    // console.log(deletedOrder);
                    const iProduct = posCartOrders.indexOf(deletedOrder);
                    posCartOrders.splice(iProduct, 1);
                    updateOrderList();
                    updateFields();
                }
            });

            // Eventlistener for input number control
            input_td_3.addEventListener('input', (e)=>{
                let changedOrder = posCartOrders.find(order2 => order2.product._id == order.product._id);
                changedOrder.quantity = e.target.value;
                changedOrder.subtotal = changedOrder.quantity*changedOrder.product.price;
                changedOrder.discount = changedOrder.quantity*changedOrder.product.discount*changedOrder.product.price;
                updateFields();
            });

            td_3.append(input_td_3);
            td_5.appendChild(a_td_5);

            tr.appendChild(th_1);
            tr.appendChild(td_2);
            tr.appendChild(td_3);
            tr.appendChild(td_4);
            tr.appendChild(td_5);

            tableBody.append(tr);
        });
    };

    // Update fields on cart
    function updateFields(){
        const subtotal_field = document.querySelector('#subtotal');
        const tax_field = document.querySelector('#tax');
        const discount_field = document.querySelector('#discount');
        const total_field = document.querySelector('#total');

        let subtotal = 0;
        let discount = 0;
        let tax = 0;

        posCartOrders.forEach(order => {
            subtotal += order.subtotal;
            discount += order.discount;
            tax += order.product.tax*order.subtotal;
        });

        subtotal_field.innerText = `${subtotal.toFixed(2)} USD`;
        tax_field.innerText = `${tax.toFixed(2)} USD`;
        discount_field.innerText = `${discount.toFixed(2)} USD`;
        total_field.innerText = `${(subtotal+tax-discount).toFixed(2)} USD`;
    }
    
     // POS logic
    (() => {
            // Products data from server
            const productList = <%- JSON.stringify(products) %>;

            // Add products to cart
            const btnsAddProduct = document.querySelectorAll("a.btn.btn-success.btn-sm");
            btnsAddProduct.forEach(btn => {
                btn.addEventListener('click', (e)=>{
                    let addedProduct = productList.find(product => product._id == btn.id);
                    if(posCartOrders.find(order => order.product == addedProduct)){
                        const editedOrder = posCartOrders.find(order => order.product._id == addedProduct._id);
                        
                        editedOrder.quantity += 1;
                        editedOrder.subtotal = editedOrder.quantity*editedOrder.product.price;
                        editedOrder.discount = editedOrder.quantity*editedOrder.product.discount*editedOrder.product.price;

                    } else {
                        posCartOrders.push({
                            product: addedProduct,
                            quantity: 1,
                            subtotal: addedProduct.price,
                            discount: addedProduct.discount
                        })
                    }
                    // console.log(posProductOrders);
                    updateOrderList();
                    updateFields();
                });
            });

            // Clear porducts from cart
            const btnClearCart = document.getElementById("btnClearCart");
            btnClearCart.addEventListener('click', (e) => {
                posCartOrders.length = 0;
                updateOrderList();
                updateFields();
            });


        })();
</script>